1
00:00:00,000 --> 00:00:04,560
Всем привет в этом видео я расскажу как

2
00:00:02,520 --> 00:00:06,660
полностью с нуля создать и настроить

3
00:00:04,560 --> 00:00:08,639
сервер для размещения на нем своего

4
00:00:06,660 --> 00:00:11,040
джанга приложения я буду загружать

5
00:00:08,639 --> 00:00:12,840
проект который мы делаем на стримах

6
00:00:11,040 --> 00:00:15,360
ссылка есть в описании Этот проект

7
00:00:12,840 --> 00:00:18,180
называется Call Helper он предназначен

8
00:00:15,360 --> 00:00:21,119
для операторов call-центров чтобы

9
00:00:18,180 --> 00:00:23,340
составлять график кто когда идет на обед

10
00:00:21,119 --> 00:00:26,519
ну и также в процессе видео мы поговорим

11
00:00:23,340 --> 00:00:28,920
про настройку гуникорн Engine X и

12
00:00:26,519 --> 00:00:31,560
привязку ssl сертификата с помощью

13
00:00:28,920 --> 00:00:33,300
сербот-бот Ну и Давайте приступим и

14
00:00:31,560 --> 00:00:35,940
начинать мы будем с выбора доменного

15
00:00:33,300 --> 00:00:37,500
имени доменное имя я приобретал на

16
00:00:35,940 --> 00:00:40,440
регрул у меня уже есть несколько

17
00:00:37,500 --> 00:00:42,239
доменных имен ранее Я уже купил для

18
00:00:40,440 --> 00:00:46,199
нашего проекта домен который называется

19
00:00:42,239 --> 00:00:49,320
я кушать РФ и именно этот домен Я

20
00:00:46,200 --> 00:00:51,539
пытался присоединить к нашему проекту На

21
00:00:49,320 --> 00:00:54,600
прошлом стриме и у нас возникла проблема

22
00:00:51,539 --> 00:00:57,000
которую мы решали целый час очень много

23
00:00:54,600 --> 00:00:59,340
было потрачено времени и поэтому Сейчас

24
00:00:57,000 --> 00:01:01,440
я расскажу что не так с этим доменным

25
00:00:59,340 --> 00:01:03,539
именем Что нужно делать чтобы избежать

26
00:01:01,440 --> 00:01:06,899
тех проблем с которыми мы столкнулись

27
00:01:03,539 --> 00:01:10,020
во-первых это доменное имя я кушать р.ф

28
00:01:06,900 --> 00:01:13,680
содержит кириллицу и кириллица не

29
00:01:10,020 --> 00:01:16,560
попадает в таблицу аски кодировку аске и

30
00:01:13,680 --> 00:01:19,080
поэтому у нас с этим возникают большие

31
00:01:16,560 --> 00:01:20,340
проблемы мы не сможем нормально указать

32
00:01:19,080 --> 00:01:23,460
в настройках

33
00:01:20,340 --> 00:01:27,600
Engine X А сертбот эти символы Поэтому

34
00:01:23,460 --> 00:01:30,479
если мы купили домен именно с кириллицей

35
00:01:27,600 --> 00:01:33,419
то нам необходимо использовать конвертер

36
00:01:30,479 --> 00:01:36,060
который называется паникот конвертер и

37
00:01:33,420 --> 00:01:38,400
смотрите если мы конвертируем именно

38
00:01:36,060 --> 00:01:40,619
домен я кушать РФ который содержит

39
00:01:38,400 --> 00:01:43,020
кириллицу то с помощью этого конвертера

40
00:01:40,619 --> 00:01:45,840
то у нас домен с кириллицей превращается

41
00:01:43,020 --> 00:01:48,179
в домен который состоит только из

42
00:01:45,840 --> 00:01:51,240
символов таблицы аски таким образом

43
00:01:48,180 --> 00:01:54,299
Везде где нам необходимо будет указывать

44
00:01:51,240 --> 00:01:56,640
наш домен на сервере мы должны будем

45
00:01:54,299 --> 00:02:00,720
использовать не вот это вот значение я

46
00:01:56,640 --> 00:02:03,000
кушать РФ а прописывать Вот именно это

47
00:02:00,720 --> 00:02:05,520
значение и пока добрые люди вот это вот

48
00:02:03,000 --> 00:02:07,920
не подсказали я сидел на стриме и бился

49
00:02:05,520 --> 00:02:09,840
с непонятными проблемами когда вроде все

50
00:02:07,920 --> 00:02:12,540
работает но при этом ничего не работает

51
00:02:09,840 --> 00:02:15,060
Ну а сейчас когда уже после стрима Я

52
00:02:12,540 --> 00:02:17,940
записываю это видео то я уже приобрел

53
00:02:15,060 --> 00:02:20,520
другой домен уже без кириллицы чисто

54
00:02:17,940 --> 00:02:22,140
латиница он называется Call Helper и

55
00:02:20,520 --> 00:02:25,379
дальше во всем видео я буду использовать

56
00:02:22,140 --> 00:02:27,059
именно этот домен Call хелпера чтобы не

57
00:02:25,379 --> 00:02:29,579
было никакой путаницы все было

58
00:02:27,060 --> 00:02:32,040
однозначно приобретение доменного имени

59
00:02:29,580 --> 00:02:34,680
эта процедура довольно быстрая Мы

60
00:02:32,040 --> 00:02:37,859
выбираем домен какой хотим его покупаем

61
00:02:34,680 --> 00:02:40,379
затем необходимо будет вводить свои

62
00:02:37,860 --> 00:02:43,379
персональные данные так как домен Это

63
00:02:40,379 --> 00:02:45,780
публичная штука и с нами всегда можно

64
00:02:43,379 --> 00:02:48,660
будет связаться как с владельцем домена

65
00:02:45,780 --> 00:02:50,640
поэтому оставляем все данные и затем

66
00:02:48,660 --> 00:02:53,340
имеем возможность приобретать домены

67
00:02:50,640 --> 00:02:55,679
после приобретения домена необходимо его

68
00:02:53,340 --> 00:02:58,260
настроить а именно Нам необходимо

69
00:02:55,680 --> 00:03:01,440
добавить ресурсные записи в данном

70
00:02:58,260 --> 00:03:04,280
случае это ресурсные за на старый сервер

71
00:03:01,440 --> 00:03:07,560
и нам необходимо связать все необходимые

72
00:03:04,280 --> 00:03:09,959
поддомены с IP адресом сервера но так

73
00:03:07,560 --> 00:03:12,300
как сервер мы еще не создавали то

74
00:03:09,959 --> 00:03:14,700
ip-адреса у нас нового нет и Давайте

75
00:03:12,300 --> 00:03:17,099
приступим к созданию сервера но для

76
00:03:14,700 --> 00:03:20,640
начала необходимо нам его выбрать на

77
00:03:17,099 --> 00:03:22,980
выбор у нас хостинг ВДС сервера и

78
00:03:20,640 --> 00:03:25,379
полноценный настоящий облачные сервера

79
00:03:22,980 --> 00:03:28,679
хостинги нам не подходят однозначно

80
00:03:25,379 --> 00:03:30,840
потому что нам нужен полный доступ к

81
00:03:28,680 --> 00:03:32,400
нашему серверу в том числе и права root

82
00:03:30,840 --> 00:03:35,519
мы будем его конфигурировать полностью

83
00:03:32,400 --> 00:03:37,620
как нам надо И у нас остается ВДС или

84
00:03:35,519 --> 00:03:39,540
Облачный сервер чаще всего ВДС

85
00:03:37,620 --> 00:03:41,879
используется для каких-то мелких

86
00:03:39,540 --> 00:03:44,700
проектов не особо значимых учебных

87
00:03:41,879 --> 00:03:47,819
проектов а настоящие полноценные проекты

88
00:03:44,700 --> 00:03:50,159
они находятся конечно же уже на облачных

89
00:03:47,819 --> 00:03:52,560
мощных серверах Но и так как цель всех

90
00:03:50,159 --> 00:03:55,019
стримов это создание реального проекта

91
00:03:52,560 --> 00:03:57,299
который будет работать у нас Но и так

92
00:03:55,019 --> 00:03:59,819
как мы разрабатываем настоящий проект то

93
00:03:57,299 --> 00:04:01,200
и размещать его будем сразу на облачно

94
00:03:59,819 --> 00:04:04,560
на этом сервере я буду использовать

95
00:04:01,200 --> 00:04:07,679
площадку Select L здесь переходим в

96
00:04:04,560 --> 00:04:09,599
облачную платформу создать проект даем

97
00:04:07,680 --> 00:04:12,659
какой-нибудь название я дам название

98
00:04:09,599 --> 00:04:15,119
нашего проекта Call Helper

99
00:04:12,659 --> 00:04:18,298
и после создания проекта у нас уже

100
00:04:15,120 --> 00:04:21,418
появляется возможность создать сервер

101
00:04:18,298 --> 00:04:23,698
имя можно оставить пока что так Ну а

102
00:04:21,418 --> 00:04:27,120
Пула адресов я выбираю именно ru3b

103
00:04:23,699 --> 00:04:29,460
потому что именно на ru3b у нас доступна

104
00:04:27,120 --> 00:04:31,340
линейка sharedline это такая штука

105
00:04:29,460 --> 00:04:34,739
которая нам позволяет арендовать

106
00:04:31,340 --> 00:04:36,719
полноценный настоящий Облачный сервер но

107
00:04:34,740 --> 00:04:39,360
при этом арендовать только часть

108
00:04:36,720 --> 00:04:41,759
производительности часть мощности почему

109
00:04:39,360 --> 00:04:45,120
это нужно смотрите сейчас мы размещаем

110
00:04:41,759 --> 00:04:47,580
наш проект совершенно с нуля мы его

111
00:04:45,120 --> 00:04:49,740
создадим настроим один раз запустим он

112
00:04:47,580 --> 00:04:51,960
будет фоном работать но по сути все

113
00:04:49,740 --> 00:04:54,540
остальные изменения какие-то я буду

114
00:04:51,960 --> 00:04:57,120
делать локально и работать буду и больше

115
00:04:54,540 --> 00:04:59,940
локально поэтому мы будем платить за

116
00:04:57,120 --> 00:05:02,460
целое ядро но как бы нам это мощность

117
00:04:59,940 --> 00:05:05,880
Будет избыточно нам столько мощности не

118
00:05:02,460 --> 00:05:08,340
надо И вот именно мы можем арендовать

119
00:05:05,880 --> 00:05:10,860
только часть например 10 процентов 20

120
00:05:08,340 --> 00:05:14,400
или 50 процентов мощности Это означает

121
00:05:10,860 --> 00:05:16,680
что мы получаем минимум 10 процентов и

122
00:05:14,400 --> 00:05:19,560
если все остальные участники с которыми

123
00:05:16,680 --> 00:05:22,199
мы делим эту мощность они свои доли

124
00:05:19,560 --> 00:05:24,660
будут вот максимально тратить полностью

125
00:05:22,199 --> 00:05:26,460
у них серваки будут нагружены тогда мы

126
00:05:24,660 --> 00:05:28,560
будем 10 процентов только иметь но чаще

127
00:05:26,460 --> 00:05:30,239
всего такого не происходит если нам

128
00:05:28,560 --> 00:05:32,759
попадутся Ребята которые точно также

129
00:05:30,240 --> 00:05:34,320
фоном просто что-то там запустят то у

130
00:05:32,759 --> 00:05:36,900
нас получается будет даже больше

131
00:05:34,320 --> 00:05:40,020
производительность Чем 10%. таким

132
00:05:36,900 --> 00:05:42,599
образом мы платим за 10 процентов а в

133
00:05:40,020 --> 00:05:44,520
итоге получаем мощность даже больше ну

134
00:05:42,600 --> 00:05:47,220
вплоть до 100 процентов это в идеальном

135
00:05:44,520 --> 00:05:49,560
случае но при этом в дальнейшем Когда у

136
00:05:47,220 --> 00:05:52,259
нас проект будет разрастаться когда у

137
00:05:49,560 --> 00:05:54,180
нас появится фронт когда мы его также на

138
00:05:52,259 --> 00:05:56,880
наш сервер загрузим то нам потребуется

139
00:05:54,180 --> 00:06:00,060
уже больше мощности и мы в любой момент

140
00:05:56,880 --> 00:06:02,940
сможем Как увеличить долю там например с

141
00:06:00,060 --> 00:06:05,820
10 до 50 процентов так и в принципе

142
00:06:02,940 --> 00:06:08,100
поменять всю конфигурацию добавить ядро

143
00:06:05,820 --> 00:06:09,599
добавить оперативной памяти и все это

144
00:06:08,100 --> 00:06:12,180
сделать мы можем что очень важно

145
00:06:09,600 --> 00:06:14,520
бесплатно почему это важно Да потому что

146
00:06:12,180 --> 00:06:17,039
у меня лично уже был опыт когда мы

147
00:06:14,520 --> 00:06:19,620
прошлые проект размещали на ВДС сервере

148
00:06:17,039 --> 00:06:22,318
мы тогда Мы начинали проект и я взял

149
00:06:19,620 --> 00:06:24,180
сервера с одним ядром и одним гигом

150
00:06:22,319 --> 00:06:26,220
оперативной памяти затем наш проект

151
00:06:24,180 --> 00:06:27,840
начал чуть по чуть разрастаться и в

152
00:06:26,220 --> 00:06:29,580
какой-то момент фронтенд при

153
00:06:27,840 --> 00:06:32,638
инициализации проекта стал требовать

154
00:06:29,580 --> 00:06:34,258
больше чем 1 ГБ оперативки и я тогда

155
00:06:32,639 --> 00:06:35,940
очень сильно удивился когда добавить

156
00:06:34,259 --> 00:06:38,039
производительности или добавить

157
00:06:35,940 --> 00:06:40,560
оперативной памяти Я просто не мог

158
00:06:38,039 --> 00:06:42,419
необходимо было покупать новый серверы

159
00:06:40,560 --> 00:06:44,819
заново его настраивать Да была платная

160
00:06:42,419 --> 00:06:46,979
функция по переносу данных со старого

161
00:06:44,819 --> 00:06:48,919
сервера на новые но мне такой вариант

162
00:06:46,979 --> 00:06:51,719
тоже не подходил поэтому я полностью

163
00:06:48,919 --> 00:06:53,940
самостоятельно копировал данные со

164
00:06:51,720 --> 00:06:56,639
старого проекта затем переносил на новый

165
00:06:53,940 --> 00:06:58,860
и это было очень долго очень муторно и

166
00:06:56,639 --> 00:07:01,380
неприятно поэтому на данной платформе

167
00:06:58,860 --> 00:07:03,060
именно с использованием sharedline для

168
00:07:01,380 --> 00:07:05,219
линейки серверов У нас есть всё

169
00:07:03,060 --> 00:07:08,100
необходимое поначалу мы будем арендовать

170
00:07:05,220 --> 00:07:10,860
всего 10% мощности затем всегда сможем

171
00:07:08,100 --> 00:07:13,080
её увеличить Ну и затем когда добавим

172
00:07:10,860 --> 00:07:15,600
фронт на наш сервер то мы просто

173
00:07:13,080 --> 00:07:18,539
расширим конфигурацию операционную

174
00:07:15,600 --> 00:07:20,699
систему я выберу одиннадцать на у

175
00:07:18,539 --> 00:07:23,759
которой есть любая другая

176
00:07:20,699 --> 00:07:26,759
Ubuntu CentOS Fedora по конфигурации я

177
00:07:23,759 --> 00:07:29,400
выбираю одно ядро и 512 мегабайт

178
00:07:26,759 --> 00:07:32,580
оперативной памяти и арендую 10

179
00:07:29,400 --> 00:07:34,258
процентов этого сервера берем диск на 5

180
00:07:32,580 --> 00:07:36,599
Гб

181
00:07:34,259 --> 00:07:40,319
Итак смотрим итоговую стоимость У меня

182
00:07:36,599 --> 00:07:42,180
получилось 140 рублей создаем Ну а

183
00:07:40,319 --> 00:07:45,539
сколько стоит любая другая конфигурация

184
00:07:42,180 --> 00:07:47,460
с любым другим процентом аренды CPU Вы

185
00:07:45,539 --> 00:07:49,500
можете посмотреть сами ссылка будет в

186
00:07:47,460 --> 00:07:51,419
описании как я и сказал ранее Нам

187
00:07:49,500 --> 00:07:54,419
необходимо было к домену привязать

188
00:07:51,419 --> 00:07:58,139
айпишник Вот Мы создали сервак И вот он

189
00:07:54,419 --> 00:08:00,659
наш белый адрес копируем его переходим в

190
00:07:58,139 --> 00:08:03,000
игру и вот здесь вот мы для всех

191
00:08:00,660 --> 00:08:05,759
существующих записей которые уже я

192
00:08:03,000 --> 00:08:08,539
создал ранее я буду привязывать новый

193
00:08:05,759 --> 00:08:08,539
айпишник

194
00:08:11,280 --> 00:08:15,840
Давайте разберемся Почему здесь так

195
00:08:13,440 --> 00:08:17,880
много записей для чего они нужны на

196
00:08:15,840 --> 00:08:20,638
примере вот опять же существующего

197
00:08:17,880 --> 00:08:22,740
проекта в третьем Club это купленный

198
00:08:20,639 --> 00:08:24,539
домен чаще всего он подойдет для

199
00:08:22,740 --> 00:08:26,460
фронтендо то есть для обычного

200
00:08:24,539 --> 00:08:28,800
пользователя который видит этот домен

201
00:08:26,460 --> 00:08:32,159
этот домен обозначается вот такой

202
00:08:28,800 --> 00:08:35,940
ресурсной записью Просто собака и к нему

203
00:08:32,159 --> 00:08:38,458
точно также относится www это как бы уже

204
00:08:35,940 --> 00:08:40,979
рудимент конечно но тем не менее мы его

205
00:08:38,458 --> 00:08:43,260
должны указать но так как у нас в

206
00:08:40,979 --> 00:08:45,120
проекте будет и фронтенд и бэкент и

207
00:08:43,260 --> 00:08:47,220
взаимодействие фронтендо с бэкэндом

208
00:08:45,120 --> 00:08:49,380
происходит через API то здесь Нам тоже

209
00:08:47,220 --> 00:08:52,440
необходим какой-то домен и здесь Я

210
00:08:49,380 --> 00:08:54,300
указываю Что именно на поддомене API то

211
00:08:52,440 --> 00:08:57,839
есть конечный вариант будет API точка

212
00:08:54,300 --> 00:09:01,319
Call helper.ru Вот это у меня будет

213
00:08:57,839 --> 00:09:03,899
бэкент и поэтому этот айпишник Я точно

214
00:09:01,320 --> 00:09:07,019
так же связываю сапе и как я сказал

215
00:09:03,899 --> 00:09:11,360
ранее www Мы точно также привязываем

216
00:09:07,019 --> 00:09:15,420
сейчас все это было сделано конкретно

217
00:09:11,360 --> 00:09:17,580
для будущего проекта в проде но у нас

218
00:09:15,420 --> 00:09:19,800
еще будет деф проект то есть в котором

219
00:09:17,580 --> 00:09:22,080
мы будем какие-то фичи заливать и потом

220
00:09:19,800 --> 00:09:23,819
когда все Тестируем уже переливать в

221
00:09:22,080 --> 00:09:27,060
Мастер Поэтому нам необходимо добавить

222
00:09:23,820 --> 00:09:29,700
еще какие-то поддомены чтобы мы могли

223
00:09:27,060 --> 00:09:31,560
это делать на тестовом уже проекте я

224
00:09:29,700 --> 00:09:34,680
создал еще один поддомен который

225
00:09:31,560 --> 00:09:37,560
называется api.df конечный вариант будет

226
00:09:34,680 --> 00:09:39,140
апедев точка Call helper.ru и то же

227
00:09:37,560 --> 00:09:42,180
самое для

228
00:09:39,140 --> 00:09:45,120
www.appy.f и дальше продолжение Call

229
00:09:42,180 --> 00:09:47,760
helper.ru все это я привязываю на один

230
00:09:45,120 --> 00:09:50,580
сервак если у вас DF проект находится На

231
00:09:47,760 --> 00:09:52,860
одном сервере А провод проект на другом

232
00:09:50,580 --> 00:09:55,200
сервере в принципе это нормальная

233
00:09:52,860 --> 00:09:57,600
практика то здесь будут разные айпишники

234
00:09:55,200 --> 00:09:59,519
так как у нас все будет На одном сервере

235
00:09:57,600 --> 00:10:02,220
то в данном случае все айпишники

236
00:09:59,519 --> 00:10:05,580
одинаковые Ну а Мы возвращаемся на

237
00:10:02,220 --> 00:10:07,860
платформу My selectel здесь выбираем наш

238
00:10:05,580 --> 00:10:10,440
созданный сервер и выбираем раздел

239
00:10:07,860 --> 00:10:13,500
консоль консоль нам позволяет управлять

240
00:10:10,440 --> 00:10:16,380
нашим сер даже если вдруг он как-то не

241
00:10:13,500 --> 00:10:18,779
будет доступен по ssh например или

242
00:10:16,380 --> 00:10:21,779
что-то там поломалось то есть мы имеем

243
00:10:18,779 --> 00:10:23,820
как бы полный доступ напрямую к нашему

244
00:10:21,779 --> 00:10:26,040
серверу из консоли Давайте залогинимся

245
00:10:23,820 --> 00:10:28,740
используем Root пароль смотрите здесь

246
00:10:26,040 --> 00:10:31,199
можно использовать горячие клавиши И вот

247
00:10:28,740 --> 00:10:33,180
так вот пароль нажимаем OK и у нас

248
00:10:31,200 --> 00:10:35,640
автоматически вводится пароль от сервера

249
00:10:33,180 --> 00:10:39,719
Но что сразу Я рекомендую сделать это

250
00:10:35,640 --> 00:10:42,240
сменить пароль командой Pass VD

251
00:10:39,720 --> 00:10:43,860
Все я изменил пароль А теперь мы

252
00:10:42,240 --> 00:10:46,560
приступим к первоначальной настройке

253
00:10:43,860 --> 00:10:49,260
сервера а первоначальная настройка Нам

254
00:10:46,560 --> 00:10:51,000
необходимо Создать пользователя нового Я

255
00:10:49,260 --> 00:10:54,420
советую каждый проект на сервере

256
00:10:51,000 --> 00:10:57,060
выносить под отдельного пользователя и

257
00:10:54,420 --> 00:10:59,399
иногда даже есть смысл frontend и Back

258
00:10:57,060 --> 00:11:01,018
and на разных пользователях хранить мы

259
00:10:59,399 --> 00:11:04,079
будем создавать пользователя который

260
00:11:01,019 --> 00:11:06,000
называется Call Helper затем мы наделим

261
00:11:04,079 --> 00:11:08,399
правами суда Ну а затем просто

262
00:11:06,000 --> 00:11:10,260
переключимся на этого пользователя и уже

263
00:11:08,399 --> 00:11:13,740
будем там проводить основную настройку

264
00:11:10,260 --> 00:11:16,980
командой ад юзер мы добавляем нашего

265
00:11:13,740 --> 00:11:20,040
пользователя вводим название

266
00:11:16,980 --> 00:11:23,279
дальше по данным пользователя оставляем

267
00:11:20,040 --> 00:11:25,920
все пустым сохраняем информацию и все

268
00:11:23,279 --> 00:11:27,959
хорошо затем необходимо добавить права

269
00:11:25,920 --> 00:11:30,899
на суда Этому пользователю используем

270
00:11:27,959 --> 00:11:35,180
для этого команду User Mode с ключами AJ

271
00:11:30,899 --> 00:11:35,180
suda дальше указываем пользователя

272
00:11:36,300 --> 00:11:41,519
эту команду мы выполнили Теперь мы

273
00:11:39,600 --> 00:11:44,820
переключаемся на этого пользователя

274
00:11:41,519 --> 00:11:46,800
можно это сделать с помощью SU дальше

275
00:11:44,820 --> 00:11:51,180
ключ

276
00:11:46,800 --> 00:11:53,399
и указываем пользователя All Helper И

277
00:11:51,180 --> 00:11:55,680
сейчас мы находимся уже в домашней

278
00:11:53,399 --> 00:11:58,800
директории первоначальную настройку мы

279
00:11:55,680 --> 00:12:00,660
сделали приступаем к основной и здесь я

280
00:11:58,800 --> 00:12:04,079
уже предлагаю переключиться на

281
00:12:00,660 --> 00:12:06,480
подключение по ssh они с терминала чтобы

282
00:12:04,079 --> 00:12:09,359
было удобнее взаимодействовать с нашим

283
00:12:06,480 --> 00:12:12,300
сервером для подключения пояса Саши я

284
00:12:09,360 --> 00:12:14,459
использую утилиту Windows цепи копируем

285
00:12:12,300 --> 00:12:17,040
белый IP адрес по которому будем

286
00:12:14,459 --> 00:12:18,300
подключаться вставляем именно этот

287
00:12:17,040 --> 00:12:19,980
айпишник

288
00:12:18,300 --> 00:12:23,040
дальше

289
00:12:19,980 --> 00:12:25,459
username Call Helper и пароль который мы

290
00:12:23,040 --> 00:12:28,199
вводили видим что подключились

291
00:12:25,459 --> 00:12:31,319
Единственное что мы не сохранили его

292
00:12:28,200 --> 00:12:33,660
чтобы сохранить то нужно сделать все то

293
00:12:31,320 --> 00:12:37,680
же самое вот здесь вот сейф нажимаем

294
00:12:33,660 --> 00:12:40,140
сохранить указываем имя Пускай это будет

295
00:12:37,680 --> 00:12:42,540
Call Helper и вот здесь вот нажимаю

296
00:12:40,140 --> 00:12:44,699
галочку сохранить пароль все сохранили

297
00:12:42,540 --> 00:12:47,459
пробуем залогиниться видим что мы

298
00:12:44,700 --> 00:12:50,459
подключились здесь кнопку нажимаем Open

299
00:12:47,459 --> 00:12:53,219
Session inputti и вот все мы

300
00:12:50,459 --> 00:12:55,339
подключились по ssh к нашему серверу

301
00:12:53,220 --> 00:12:58,560
Итак настройку мы начинаем с команды

302
00:12:55,339 --> 00:13:01,139
autop D чтобы обновить менеджера пакетов

303
00:12:58,560 --> 00:13:04,018
и затем нам потребуются следующие пакеты

304
00:13:01,139 --> 00:13:05,220
установить gcc это инструменты для

305
00:13:04,019 --> 00:13:07,680
работы с разными языками

306
00:13:05,220 --> 00:13:10,860
программирования также pytundef для

307
00:13:07,680 --> 00:13:13,739
разработки Python 3 Pip для установки

308
00:13:10,860 --> 00:13:18,360
пакетов именно через пип установщик

309
00:13:13,740 --> 00:13:21,420
Python 3D lipaqd пост ql и постере SQL

310
00:13:18,360 --> 00:13:23,940
нам потребуется для базы данных по

311
00:13:21,420 --> 00:13:27,000
сгрезql Engine X нам потребуется для

312
00:13:23,940 --> 00:13:29,220
нашего прокси-сервера Он же движок сайта

313
00:13:27,000 --> 00:13:31,620
Engine X но curl просто нам потребуется

314
00:13:29,220 --> 00:13:33,779
опять же чтобы в конечном итоге делать

315
00:13:31,620 --> 00:13:36,120
запросы Ну и также как зависимость для

316
00:13:33,779 --> 00:13:38,579
других пакетов в конце ставим ключ игры

317
00:13:36,120 --> 00:13:42,540
чтобы соглашаться со всеми установками

318
00:13:38,579 --> 00:13:45,540
выполняем команду update через суда так

319
00:13:42,540 --> 00:13:48,240
как мы уже не от рутан и в первый раз

320
00:13:45,540 --> 00:13:50,699
нам необходимо ввести пароль от юзера

321
00:13:48,240 --> 00:13:55,139
Call Helper давайте сделаем это и видим

322
00:13:50,700 --> 00:13:57,660
что apdate команда пошла выполняться все

323
00:13:55,139 --> 00:14:01,260
хорошо и теперь будем выполнять

324
00:13:57,660 --> 00:14:04,579
установку пакетов я копирую целиком эту

325
00:14:01,260 --> 00:14:04,579
строчку и Вставляю

326
00:14:07,279 --> 00:14:12,839
все необходимые пакеты на данный момент

327
00:14:10,019 --> 00:14:15,139
были установлены И теперь мы перейдем к

328
00:14:12,839 --> 00:14:17,820
настройке базы данных от пользователя

329
00:14:15,139 --> 00:14:20,880
постгрыз мы должны подключиться к

330
00:14:17,820 --> 00:14:23,120
оснастке psql для управления базой

331
00:14:20,880 --> 00:14:23,120
данных

332
00:14:23,700 --> 00:14:29,040
и отсюда мы уже можем полностью

333
00:14:25,740 --> 00:14:32,160
управлять нашими базами данных во-первых

334
00:14:29,040 --> 00:14:35,099
мы создадим базу данных и создадим

335
00:14:32,160 --> 00:14:37,260
пользователя для базы данных у меня на

336
00:14:35,100 --> 00:14:39,180
одном сервере будет находиться как DF

337
00:14:37,260 --> 00:14:41,880
проект так и про проект у них будут

338
00:14:39,180 --> 00:14:43,979
разные базы данных поэтому Я создаю как

339
00:14:41,880 --> 00:14:46,740
разные базы данных одна будет называться

340
00:14:43,980 --> 00:14:49,740
Call Helper Это для прода и Call Helper

341
00:14:46,740 --> 00:14:52,380
Def Это для DF проекта пользователи

342
00:14:49,740 --> 00:14:55,260
будут называться Аналогично точно так же

343
00:14:52,380 --> 00:14:59,720
как и база данных и в качестве пароля мы

344
00:14:55,260 --> 00:14:59,720
используем свои более сложные пароли

345
00:15:00,000 --> 00:15:04,139
Итак создаем базу данных которая

346
00:15:02,100 --> 00:15:06,899
называется Call Helper и сразу же

347
00:15:04,139 --> 00:15:09,600
создаем с названием Call Helper deft

348
00:15:06,899 --> 00:15:12,660
теперь создадим два пользователя

349
00:15:09,600 --> 00:15:15,000
создаем пользователя Call Helper и

350
00:15:12,660 --> 00:15:17,839
пароль вводим какой-нибудь сложный в

351
00:15:15,000 --> 00:15:17,839
конце точка с запятой

352
00:15:18,480 --> 00:15:25,220
повторяем команду только теперь для

353
00:15:20,940 --> 00:15:25,220
пользователя Call Helper Dev

354
00:15:25,320 --> 00:15:31,380
и теперь что еще необходимо сделать нам

355
00:15:27,899 --> 00:15:33,959
сменить пароль на юзере posgries потому

356
00:15:31,380 --> 00:15:37,260
что по умолчанию идет позыри с постгресс

357
00:15:33,959 --> 00:15:39,239
и это небезопасно поэтому команды Альтер

358
00:15:37,260 --> 00:15:42,620
User позже весь паспорт и указываем

359
00:15:39,240 --> 00:15:42,620
новый Более сложный пароль

360
00:15:45,270 --> 00:15:49,380
[музыка]

361
00:15:46,740 --> 00:15:51,660
с пользователями Мы закончили Теперь

362
00:15:49,380 --> 00:15:53,060
будем настраивать наши базы данных

363
00:15:51,660 --> 00:15:55,500
используем

364
00:15:53,060 --> 00:15:57,899
рекомендуемые настройки разработчиками

365
00:15:55,500 --> 00:15:59,519
Джанго а именно использовать будем

366
00:15:57,899 --> 00:16:03,000
кодировку

367
00:15:59,519 --> 00:16:05,880
utf-8 уровень изоляции мы определяем как

368
00:16:03,000 --> 00:16:09,060
ритками этот временную зону мы поставим

369
00:16:05,880 --> 00:16:11,959
евро Москву Ну и дальше мы используем

370
00:16:09,060 --> 00:16:15,239
команду Grand All privileges чтобы

371
00:16:11,959 --> 00:16:18,359
выдать права на базу данных Call хелпера

372
00:16:15,240 --> 00:16:20,940
именно для юзера Call Helper и подобные

373
00:16:18,360 --> 00:16:24,000
четыре операции мы повторяем как для

374
00:16:20,940 --> 00:16:27,199
нашей базы данных Def так и для прод

375
00:16:24,000 --> 00:16:27,199
Давайте приступим

376
00:16:29,519 --> 00:16:33,850
Итак для прода я сделал и сделаем то же

377
00:16:32,760 --> 00:16:36,950
самое для дево

378
00:16:33,850 --> 00:16:36,950
[музыка]

379
00:16:42,380 --> 00:16:48,300
все команды мы выполнили поэтому базы

380
00:16:45,720 --> 00:16:50,699
данных настроены и Мы двигаемся дальше

381
00:16:48,300 --> 00:16:53,459
дальше мы займемся загрузкой нашего

382
00:16:50,699 --> 00:16:57,000
джанга проекта и для начала мы должны

383
00:16:53,459 --> 00:16:59,638
установить виртуальную среду Virtual enf

384
00:16:57,000 --> 00:17:02,720
для этого используем сначала команду для

385
00:16:59,639 --> 00:17:02,720
апгрейда пип

386
00:17:04,679 --> 00:17:10,760
и затем команду

387
00:17:06,660 --> 00:17:10,760
yptring стал Virtual env

388
00:17:10,919 --> 00:17:16,199
проект у нас находится на github Поэтому

389
00:17:13,380 --> 00:17:18,660
нам необходимо установить пакет гид

390
00:17:16,199 --> 00:17:20,520
используем для этого команду Суда от

391
00:17:18,660 --> 00:17:22,559
Install geed После этого мы в принципе

392
00:17:20,520 --> 00:17:25,199
можем уже взять и склонировать наш

393
00:17:22,559 --> 00:17:27,480
проект но у меня проекта публичный но

394
00:17:25,199 --> 00:17:29,820
чаще всего все реальные проекты закрытые

395
00:17:27,480 --> 00:17:32,100
и поэтому каждый раз нам придется

396
00:17:29,820 --> 00:17:34,500
вводить логин и пароль чтобы сделать

397
00:17:32,100 --> 00:17:37,500
какие-то изменения Поэтому я предлагаю

398
00:17:34,500 --> 00:17:41,220
избавиться от этого сгенерировать ssh

399
00:17:37,500 --> 00:17:43,799
ключи и добавить их вгиб чтобы нам можно

400
00:17:41,220 --> 00:17:46,080
было автоматически работать с нашим

401
00:17:43,799 --> 00:17:49,760
проектом что для этого делаем во-первых

402
00:17:46,080 --> 00:17:54,539
команда sshken с ключом Т РСА мы должны

403
00:17:49,760 --> 00:17:57,919
создать ключи на нашем сервере для

404
00:17:54,539 --> 00:17:57,919
пользователя Call Helper

405
00:17:58,559 --> 00:18:04,620
по умолчанию используем папку которую

406
00:18:01,559 --> 00:18:06,360
предлагается точка ssh парольную фразу я

407
00:18:04,620 --> 00:18:09,418
не использую

408
00:18:06,360 --> 00:18:12,178
дальше переходим в эту папку CD точка

409
00:18:09,419 --> 00:18:16,440
ssh и смотрим Что здесь появилось два

410
00:18:12,179 --> 00:18:19,200
файла idr SA это закрытый ключ ddrsa.pub

411
00:18:16,440 --> 00:18:21,840
это открытый ключ закрытый ключ мы не

412
00:18:19,200 --> 00:18:23,820
показываем нигде а открытый ключ У нас

413
00:18:21,840 --> 00:18:26,220
принципе он на то и публичный что мы его

414
00:18:23,820 --> 00:18:29,899
можем где-то распространять берем

415
00:18:26,220 --> 00:18:32,520
содержимое нашего публичного ключа

416
00:18:29,900 --> 00:18:35,700
idearsa.pub Вот она содержимое копируем

417
00:18:32,520 --> 00:18:39,780
его затем переходим в github

418
00:18:35,700 --> 00:18:43,799
здесь переходим в раздел settings

419
00:18:39,780 --> 00:18:46,139
выбираем раздел ssh Case и Как видите

420
00:18:43,799 --> 00:18:49,918
здесь у меня вот уже был ключ я его

421
00:18:46,140 --> 00:18:54,000
удаляю это старый сервер был добавляю

422
00:18:49,919 --> 00:18:56,400
новый sshk вожу сюда наш публичный ключ

423
00:18:54,000 --> 00:19:00,419
и даю какое-то название Call Helper

424
00:18:56,400 --> 00:19:03,240
selectel пускай будет о СМС Подтверждаю

425
00:19:00,419 --> 00:19:05,460
действие и Как видим ключ был добавлен

426
00:19:03,240 --> 00:19:07,860
пока что он горит серым потому что мы

427
00:19:05,460 --> 00:19:09,660
еще ни разу и мне воспользовались И

428
00:19:07,860 --> 00:19:12,360
теперь мы можем приступить к

429
00:19:09,660 --> 00:19:15,660
планированию нашего проекта для этого мы

430
00:19:12,360 --> 00:19:18,899
снова переходим на git выбираем раздел

431
00:19:15,660 --> 00:19:20,400
репозиторий выбираем проект мой Call

432
00:19:18,900 --> 00:19:23,520
Helper

433
00:19:20,400 --> 00:19:26,580
затем вот здесь код выбираем раздел ssh

434
00:19:23,520 --> 00:19:30,299
копируем ссылку для клонирования именно

435
00:19:26,580 --> 00:19:32,760
по ssh дальше мы находимся сейчас в

436
00:19:30,299 --> 00:19:35,120
домашней директории и в домашней

437
00:19:32,760 --> 00:19:35,120
директории

438
00:19:36,780 --> 00:19:42,000
мы должны написать git-клон

439
00:19:40,020 --> 00:19:44,879
указываем ссылку и дальше указываем

440
00:19:42,000 --> 00:19:47,340
название папки в которую мы скопируем

441
00:19:44,880 --> 00:19:50,400
проект так как у нас backend и так как

442
00:19:47,340 --> 00:19:53,780
сейчас я занимаюсь именно веткой Def на

443
00:19:50,400 --> 00:19:57,360
заводе директорию apidf

444
00:19:53,780 --> 00:19:59,840
Как видим появилась папка apidf можем в

445
00:19:57,360 --> 00:19:59,840
нее перейти

446
00:20:00,480 --> 00:20:06,120
видим что сейчас мы в ветки Main поэтому

447
00:20:03,240 --> 00:20:10,860
переключаемся на другую ветку делаем Это

448
00:20:06,120 --> 00:20:10,860
с помощью команды git чекаут

449
00:20:11,700 --> 00:20:16,440
и название ветки у меня эта ветка Def

450
00:20:13,919 --> 00:20:19,080
смотрим содержимое и видим что здесь уже

451
00:20:16,440 --> 00:20:20,700
наш настоящий проект Идем дальше И

452
00:20:19,080 --> 00:20:22,379
теперь нам необходимо активировать

453
00:20:20,700 --> 00:20:24,200
виртуальное окружение чтобы внутри

454
00:20:22,380 --> 00:20:27,000
восстановить все необходимые зависимости

455
00:20:24,200 --> 00:20:28,740
и изолировать проекты друг от друга

456
00:20:27,000 --> 00:20:31,860
именно с помощью этого виртуального

457
00:20:28,740 --> 00:20:36,240
окружения для этого мы используем

458
00:20:31,860 --> 00:20:38,459
команду внутри нашего проекта whirtual

459
00:20:36,240 --> 00:20:40,440
enva и название виртуального окружения у

460
00:20:38,460 --> 00:20:43,200
меня это будет папка венф

461
00:20:40,440 --> 00:20:45,980
смотрим Что появилась папка вент все

462
00:20:43,200 --> 00:20:48,299
хорошо теперь необходимо активировать

463
00:20:45,980 --> 00:20:50,760
виртуальное окружение делается это с

464
00:20:48,299 --> 00:20:54,720
помощью команды Source и дальше

465
00:20:50,760 --> 00:20:57,080
указываем путь венов bin и наш скрипт

466
00:20:54,720 --> 00:21:00,059
Activate видим что мы активировали

467
00:20:57,080 --> 00:21:01,678
виртуальное окружение вот появилось

468
00:21:00,059 --> 00:21:03,418
обозначение об этом и теперь

469
00:21:01,679 --> 00:21:06,120
устанавливаем все необходимые

470
00:21:03,419 --> 00:21:09,000
зависимости с помощью команды VIP

471
00:21:06,120 --> 00:21:11,959
Install ключ R и Файлик requiremance

472
00:21:09,000 --> 00:21:11,960
нашего проекта

473
00:21:15,000 --> 00:21:18,000
в нашем проекте также должен

474
00:21:16,679 --> 00:21:20,940
присутствовать

475
00:21:18,000 --> 00:21:23,820
енв файл Со всеми нашими секретами но

476
00:21:20,940 --> 00:21:26,640
так как эту информацию нельзя хранить в

477
00:21:23,820 --> 00:21:29,399
гите поэтому у нас есть Файлик который

478
00:21:26,640 --> 00:21:31,559
называется Example env и здесь

479
00:21:29,400 --> 00:21:34,320
определены все константы которые должны

480
00:21:31,559 --> 00:21:38,879
быть заполнены скопируем этот Файлик в

481
00:21:34,320 --> 00:21:41,220
новый файл.env теперь отредактируем файл

482
00:21:38,880 --> 00:21:43,400
env секрет key

483
00:21:41,220 --> 00:21:47,720
можно использовать какой-нибудь онлайн

484
00:21:43,400 --> 00:21:47,720
Джанго секретки генератор

485
00:21:53,900 --> 00:21:58,740
Единственное что советую все это

486
00:21:57,059 --> 00:22:01,379
содержимое

487
00:21:58,740 --> 00:22:04,500
выделить обычными одинарными скобками

488
00:22:01,380 --> 00:22:07,559
для двойными дальше режим дебага у нас

489
00:22:04,500 --> 00:22:10,559
будет Room loadhosts на данный момент

490
00:22:07,559 --> 00:22:12,840
пока мы не подключили доменное имя в

491
00:22:10,559 --> 00:22:15,000
качестве loadhosts разрешенных

492
00:22:12,840 --> 00:22:17,879
разрешенных Ростов с которых возможно

493
00:22:15,000 --> 00:22:20,159
подключение к бкнду мы укажем нашей

494
00:22:17,880 --> 00:22:23,220
айпишник Это белая ip-адрес в моем

495
00:22:20,159 --> 00:22:25,620
проекте Я указываю Через пробел Все

496
00:22:23,220 --> 00:22:27,900
Хосты а затем в коде уже превращается

497
00:22:25,620 --> 00:22:30,360
все это в массив

498
00:22:27,900 --> 00:22:34,280
и также указываем данные для подключения

499
00:22:30,360 --> 00:22:38,000
к поиск ql Database у нас называется

500
00:22:34,280 --> 00:22:38,000
All Helper Dev

501
00:22:39,900 --> 00:22:44,940
Давайте попробуем запустить наш проект

502
00:22:42,120 --> 00:22:47,399
используем команду Python manage pirent

503
00:22:44,940 --> 00:22:49,260
Server и видим что проект запустился но

504
00:22:47,400 --> 00:22:52,260
подключиться к нему не сможем потому что

505
00:22:49,260 --> 00:22:54,360
по умолчанию создается 127001 чтобы

506
00:22:52,260 --> 00:22:57,179
запустить наш сервак Нам необходимо

507
00:22:54,360 --> 00:22:59,120
ввести команду pyton manage pirans

508
00:22:57,179 --> 00:23:02,460
сервер и дальше указать

509
00:22:59,120 --> 00:23:03,739
ip-шник 4 нуля Ну и порт Пускай это

510
00:23:02,460 --> 00:23:06,780
будет 8000

511
00:23:03,740 --> 00:23:10,260
И вот теперь мы сможем зайти и по белому

512
00:23:06,780 --> 00:23:12,720
айпишнику с оказанием 8000 порта мы

513
00:23:10,260 --> 00:23:15,179
сможем подключиться видим что это уже

514
00:23:12,720 --> 00:23:17,700
ответ от джанга

515
00:23:15,179 --> 00:23:19,679
и можем перейти например в админку видим

516
00:23:17,700 --> 00:23:22,860
что все работает все отображается все

517
00:23:19,679 --> 00:23:24,840
хорошо но сейчас за все это логику

518
00:23:22,860 --> 00:23:26,539
отвечает непосредственно приложение

519
00:23:24,840 --> 00:23:30,059
Jungle

520
00:23:26,539 --> 00:23:32,580
и нам вот из айпишника нужно перевести

521
00:23:30,059 --> 00:23:35,280
это все в доменное имя убрать вот этот

522
00:23:32,580 --> 00:23:37,980
восьмитысячный порт Ну и вообще сделать

523
00:23:35,280 --> 00:23:40,740
так чтобы у нас не встроенный движок

524
00:23:37,980 --> 00:23:43,159
джанга работал а за все проксирование и

525
00:23:40,740 --> 00:23:45,659
за все перенаправления запросов отвечал

526
00:23:43,159 --> 00:23:47,280
настоящий нормальный движок

527
00:23:45,659 --> 00:23:49,799
Engine X единственное что я сразу

528
00:23:47,280 --> 00:23:53,460
советую еще сделать для проекта это

529
00:23:49,799 --> 00:23:56,340
создать папку Статик и медиа если мы это

530
00:23:53,460 --> 00:23:58,799
не сделаем то велика вероятность что эта

531
00:23:56,340 --> 00:24:02,280
папка будет создана автоматически Вроде

532
00:23:58,799 --> 00:24:04,860
бы ничего но здесь вся здесь у нас все

533
00:24:02,280 --> 00:24:07,020
папки и файлы созданы от пользователя

534
00:24:04,860 --> 00:24:09,360
Call Helper Но если автоматически будет

535
00:24:07,020 --> 00:24:12,240
создаваться папка то она создастся от

536
00:24:09,360 --> 00:24:15,539
Root и у нас просто не будет доступа к

537
00:24:12,240 --> 00:24:19,799
этой папке поэтому командами МКД мы

538
00:24:15,539 --> 00:24:22,200
создаем Статик и м-кодир медиа

539
00:24:19,799 --> 00:24:25,379
проверяем чтобы эти папки у нас были Вот

540
00:24:22,200 --> 00:24:26,760
она Медиа Вот анастасик и все окей Ну и

541
00:24:25,380 --> 00:24:29,820
давайте уже полностью тогда завершим

542
00:24:26,760 --> 00:24:32,158
настройку джанга проекта что мы еще не

543
00:24:29,820 --> 00:24:34,320
сделали Мы должны применить стандартные

544
00:24:32,159 --> 00:24:37,320
иммиграции которые есть у нас для этого

545
00:24:34,320 --> 00:24:39,000
pyton manage Pie migrate применяем

546
00:24:37,320 --> 00:24:41,760
миграции

547
00:24:39,000 --> 00:24:44,460
миграции применились теперь необходимо

548
00:24:41,760 --> 00:24:46,679
создать новые иммиграции для этого

549
00:24:44,460 --> 00:24:48,900
используем команду Python manage Pie

550
00:24:46,679 --> 00:24:52,500
Make migrations

551
00:24:48,900 --> 00:24:55,799
и если у вас в проекте как у меня по

552
00:24:52,500 --> 00:24:58,260
умолчанию нет папочки migrations в

553
00:24:55,799 --> 00:25:01,460
каждом приложении то эти приложения как

554
00:24:58,260 --> 00:25:03,780
бы не будут видны для вот этой команды

555
00:25:01,460 --> 00:25:06,299
mademigrations эти приложения будут

556
00:25:03,780 --> 00:25:09,299
пропускаться чтобы вручную указать

557
00:25:06,299 --> 00:25:11,940
приложение где есть какие-то миграции

558
00:25:09,299 --> 00:25:14,820
которые надо применить которых нет этой

559
00:25:11,940 --> 00:25:17,360
папки мы должны указать явно название

560
00:25:14,820 --> 00:25:21,480
этого приложения данном случае Python

561
00:25:17,360 --> 00:25:24,059
makmigrations у меня это приложение brex

562
00:25:21,480 --> 00:25:27,000
Мы видим что модели были созданы еще раз

563
00:25:24,059 --> 00:25:28,980
применяем миграцию все хорошо теперь мы

564
00:25:27,000 --> 00:25:31,080
должны создать супер юзера для этого

565
00:25:28,980 --> 00:25:34,440
используем команду Python manage Pie

566
00:25:31,080 --> 00:25:38,480
Create Superuser

567
00:25:34,440 --> 00:25:38,480
имя пускай будет админ

568
00:25:39,000 --> 00:25:44,640
И последнее что нужно сделать это

569
00:25:41,100 --> 00:25:49,500
собрать все статику воедино Python

570
00:25:44,640 --> 00:25:49,500
manage Pie collect Static

571
00:25:49,919 --> 00:25:55,140
165 файлов у нас были скопированы и все

572
00:25:52,919 --> 00:25:57,000
Ну а теперь давайте приступать к

573
00:25:55,140 --> 00:25:59,520
дальнейшей настройке как я и сказал нам

574
00:25:57,000 --> 00:26:02,100
потребуется движок Engine X но сам по

575
00:25:59,520 --> 00:26:04,320
себе Engine X не умеет взаимодействовать

576
00:26:02,100 --> 00:26:07,559
с Джанго приложением Нам необходимо

577
00:26:04,320 --> 00:26:11,220
какая-то прослойка которая будет по сути

578
00:26:07,559 --> 00:26:13,980
проксировать сен-женекс на наш Джанго

579
00:26:11,220 --> 00:26:17,039
проект И для этого используются гуни

580
00:26:13,980 --> 00:26:19,980
корн уникорн это и есть наша прослойка

581
00:26:17,039 --> 00:26:23,158
которая помогает Соединить ngnx с нашим

582
00:26:19,980 --> 00:26:25,260
проектом и Давайте его настроим первое

583
00:26:23,159 --> 00:26:27,360
что нужно сделать это выполнить в

584
00:26:25,260 --> 00:26:30,480
виртуальном окружении команду пип

585
00:26:27,360 --> 00:26:33,959
Install gunny corn Я советую не

586
00:26:30,480 --> 00:26:37,080
добавлять эту зависимость в наш Файлик

587
00:26:33,960 --> 00:26:39,000
wiremance на гите по одной простой

588
00:26:37,080 --> 00:26:41,279
причине что не всегда этот пакет

589
00:26:39,000 --> 00:26:44,400
корректно устанавливается на локальном

590
00:26:41,279 --> 00:26:46,440
компьютере Поэтому вот именно на сервере

591
00:26:44,400 --> 00:26:49,200
Где нам необходимо Мы сначала

592
00:26:46,440 --> 00:26:51,179
устанавливаем все пакеты а затем точно

593
00:26:49,200 --> 00:26:52,700
так же в этом окружении просто еще

594
00:26:51,179 --> 00:26:55,500
дополняем

595
00:26:52,700 --> 00:26:58,700
командой Pip Install

596
00:26:55,500 --> 00:26:58,700
и gunny corn

597
00:26:59,159 --> 00:27:05,520
затем Нам необходимо будет создать файл

598
00:27:01,980 --> 00:27:08,940
сокета и файл службы гуникорн делать Это

599
00:27:05,520 --> 00:27:11,158
мы будем по пути etc System Day System и

600
00:27:08,940 --> 00:27:14,120
здесь необходимо дать название гуникорн

601
00:27:11,159 --> 00:27:17,059
сокета у меня в проекте их будет два

602
00:27:14,120 --> 00:27:19,678
каникундеф и просто гуникорн точка сокет

603
00:27:17,059 --> 00:27:22,639
Сейчас мы будем настраивать только

604
00:27:19,679 --> 00:27:22,640
гуникорн деф

605
00:27:22,760 --> 00:27:28,200
файл сокета мы должны заполнить Вот

606
00:27:25,440 --> 00:27:30,419
такими данными в разделе Юнит у нас

607
00:27:28,200 --> 00:27:32,279
description можно написать гуникорн де ф

608
00:27:30,419 --> 00:27:35,220
сокет это ни на что не влияет дальше

609
00:27:32,279 --> 00:27:38,039
лисен Стрим в разделе Socket здесь

610
00:27:35,220 --> 00:27:40,080
необходимо указать название данном

611
00:27:38,039 --> 00:27:43,860
случае Пускай это будет рангу никорн

612
00:27:40,080 --> 00:27:44,779
дефис деф сокет Install оставляем по

613
00:27:43,860 --> 00:27:47,580
умолчанию

614
00:27:44,779 --> 00:27:50,960
и теперь настраиваем точно такой же

615
00:27:47,580 --> 00:27:50,960
Файлик но уже для службы

616
00:27:51,140 --> 00:27:56,700
здесь настроек Немного больше Но ничего

617
00:27:54,600 --> 00:27:59,340
страшного я пока что просто скопирую

618
00:27:56,700 --> 00:28:03,500
Сейчас расскажу description точно также

619
00:27:59,340 --> 00:28:03,500
это мы для себя больше пишем

620
00:28:04,159 --> 00:28:10,620
requires вот здесь нужно указать точное

621
00:28:07,380 --> 00:28:13,380
название которое мы написали в сокете он

622
00:28:10,620 --> 00:28:15,678
у нас гуникорн деф сокет автор Network

623
00:28:13,380 --> 00:28:18,419
также оставляем дальше мы указываем

624
00:28:15,679 --> 00:28:19,940
пользователя от которого мы будем

625
00:28:18,419 --> 00:28:23,880
запускать

626
00:28:19,940 --> 00:28:26,700
эту службу у нас это по умолчанию Call

627
00:28:23,880 --> 00:28:29,220
Helper и группа Call Helper А дальше у

628
00:28:26,700 --> 00:28:31,559
нас параметр working directory Где

629
00:28:29,220 --> 00:28:34,740
необходимо указать полный путь до нашего

630
00:28:31,559 --> 00:28:38,639
проекта до корня проекта Сначала это

631
00:28:34,740 --> 00:28:41,460
Home Call Helper это домашняя директория

632
00:28:38,640 --> 00:28:44,340
пользователя и дальше Вот он проекта API

633
00:28:41,460 --> 00:28:47,340
Def А в следующем параметре execstart мы

634
00:28:44,340 --> 00:28:50,580
должны указать полный путь до гуникорна

635
00:28:47,340 --> 00:28:53,539
И это точно также идет Home Call Helper

636
00:28:50,580 --> 00:28:57,658
apidf а затем виртуальное окружение

637
00:28:53,539 --> 00:28:59,700
раздел bin здесь вот гуни Коран он здесь

638
00:28:57,659 --> 00:29:03,320
появился после того как мы выполнили

639
00:28:59,700 --> 00:29:05,880
команду пип-ин стал гуникорн

640
00:29:03,320 --> 00:29:08,700
и из параметров Что также нужно

641
00:29:05,880 --> 00:29:11,039
учитывать это вот здесь необходимо

642
00:29:08,700 --> 00:29:14,100
указать точное название которое мы

643
00:29:11,039 --> 00:29:16,379
написали в сокете Как там ран гуникорн

644
00:29:14,100 --> 00:29:18,480
дефис d.su и также стоит обратить

645
00:29:16,380 --> 00:29:19,340
внимание на вот эту вот строчку у меня

646
00:29:18,480 --> 00:29:22,140
это

647
00:29:19,340 --> 00:29:24,539
config.vsgi Application у меня

648
00:29:22,140 --> 00:29:27,720
называется именно так Потому что мой

649
00:29:24,539 --> 00:29:30,779
проект который я создавал я его создавал

650
00:29:27,720 --> 00:29:33,419
с именем именно конфиг Вот она Папочка

651
00:29:30,779 --> 00:29:36,299
конфиг и внутри vs Guy Файлик вот этот

652
00:29:33,419 --> 00:29:38,700
вот поэтому в зависимости от того как

653
00:29:36,299 --> 00:29:42,240
называется ваш проект указываете

654
00:29:38,700 --> 00:29:45,360
название проекта и дальше путь до вэс

655
00:29:42,240 --> 00:29:47,760
Гай файлика сохраняем настройки два

656
00:29:45,360 --> 00:29:50,459
файлика Мы создали теперь нам необходимо

657
00:29:47,760 --> 00:29:53,460
активировать сокет и активировать службы

658
00:29:50,460 --> 00:29:57,059
для этого используем команду System ktl

659
00:29:53,460 --> 00:30:00,559
Start гуни коранда в сокет и затем

660
00:29:57,059 --> 00:30:00,559
enable gunny corn Да в сокет

661
00:30:03,020 --> 00:30:09,320
и теперь активируем уже саму службу суда

662
00:30:06,840 --> 00:30:14,399
сервис

663
00:30:09,320 --> 00:30:18,500
гуникорн Dev это наша служба и старт

664
00:30:14,399 --> 00:30:18,500
Давайте сразу посмотрим статус службы

665
00:30:19,799 --> 00:30:25,620
видим что у нас Active ранен все хорошо

666
00:30:22,880 --> 00:30:28,200
Итого не корм мы настроили и теперь

667
00:30:25,620 --> 00:30:30,360
можем приступить к настройке

668
00:30:28,200 --> 00:30:33,200
Engine X вкратце по настройке Engine X

669
00:30:30,360 --> 00:30:36,539
мы создаем Файлик с конфигом и затем

670
00:30:33,200 --> 00:30:40,140
анонсируем этот конфиг как актуальный то

671
00:30:36,539 --> 00:30:42,658
есть рабочий создаем Link на этот Файлик

672
00:30:40,140 --> 00:30:45,779
поэтому сначала Вот давайте займемся

673
00:30:42,659 --> 00:30:49,140
созданием конфиг файла делать Это мы

674
00:30:45,779 --> 00:30:50,820
будем в папке etc Engine x-c valeble и

675
00:30:49,140 --> 00:30:54,380
здесь создадим какой-нибудь файл который

676
00:30:50,820 --> 00:30:54,379
называется apd Пускай

677
00:30:55,880 --> 00:31:02,820
и сюда я Вставляю вот такой вот

678
00:30:59,179 --> 00:31:07,140
шаблончик серверный здесь необходимо

679
00:31:02,820 --> 00:31:09,779
указать то доменное имя которое у нас

680
00:31:07,140 --> 00:31:12,299
была на ребро в данном случае это у нас

681
00:31:09,779 --> 00:31:14,940
будет именно apid

682
00:31:12,299 --> 00:31:18,418
и дальше Call helper.ru и Как видите

683
00:31:14,940 --> 00:31:22,460
здесь примеры www.test и test.ru то есть

684
00:31:18,419 --> 00:31:22,460
www всегда нужно также Объявлять

685
00:31:24,120 --> 00:31:30,479
то есть моем случае это получилось вот

686
00:31:26,520 --> 00:31:33,360
так www.a.pd в Call helper.ru и apd в

687
00:31:30,480 --> 00:31:36,240
Call helper.ru без www затем Location

688
00:31:33,360 --> 00:31:38,939
favicon оставляем по умолчанию а

689
00:31:36,240 --> 00:31:42,059
локейшен Статик и Location Media это

690
00:31:38,940 --> 00:31:44,700
необходимо указать нам папки до именно

691
00:31:42,059 --> 00:31:48,178
статики и папки Медиа в нашем проекте

692
00:31:44,700 --> 00:31:50,700
потому что ngnx мало того что отвечает в

693
00:31:48,179 --> 00:31:53,520
принципе за перенаправление трафика он

694
00:31:50,700 --> 00:31:55,799
также еще отвечает за выдачу и прием

695
00:31:53,520 --> 00:31:57,840
именно каких-либо файлов именно статики

696
00:31:55,799 --> 00:32:00,658
и медиа То есть если у нас приходит

697
00:31:57,840 --> 00:32:03,240
статика или Медиа то он обрабатывает

698
00:32:00,659 --> 00:32:04,740
своими силами это если приходит какой-то

699
00:32:03,240 --> 00:32:06,960
другой запрос то тогда уже

700
00:32:04,740 --> 00:32:08,340
перенаправляется на гуникор на гуникорн

701
00:32:06,960 --> 00:32:10,679
перенаправляет запрос на

702
00:32:08,340 --> 00:32:13,559
джангоприложения мы Location указываем

703
00:32:10,679 --> 00:32:17,100
папку Static дальше указываем полный

704
00:32:13,559 --> 00:32:20,639
путь до нашей папки в данном случае это

705
00:32:17,100 --> 00:32:22,020
Home Call Helper apid F для Медиа то же

706
00:32:20,640 --> 00:32:24,840
самое Так как папки у нас находится

707
00:32:22,020 --> 00:32:27,600
прямо в корне и вот это Location это как

708
00:32:24,840 --> 00:32:30,418
раз таки у нас необходимо указать куда

709
00:32:27,600 --> 00:32:32,039
перенаправлять все остальные запросы то

710
00:32:30,419 --> 00:32:34,620
есть слэш просто все остальные говорим

711
00:32:32,039 --> 00:32:37,200
что это у нас inclub Proxy params и в

712
00:32:34,620 --> 00:32:39,899
качестве прокси по рамс используем нашу

713
00:32:37,200 --> 00:32:43,020
службу она называется у нас рангу не

714
00:32:39,899 --> 00:32:45,360
корм df.sock

715
00:32:43,020 --> 00:32:47,279
Таким образом мы с ange NEX будем

716
00:32:45,360 --> 00:32:48,779
переправлять запросы на гуни корм

717
00:32:47,279 --> 00:32:50,820
Давайте посмотрим что из этого вышло

718
00:32:48,779 --> 00:32:53,760
сохраняем настройки пробуем

719
00:32:50,820 --> 00:32:56,340
перезагрузить службу команда сервис

720
00:32:53,760 --> 00:32:59,100
Engine X Restart дальше смотрим суда

721
00:32:56,340 --> 00:33:01,860
сервис enginex status состояние службы

722
00:32:59,100 --> 00:33:05,279
видим что Active ранен вроде все хорошо

723
00:33:01,860 --> 00:33:06,899
так как мы поменяли доменное имя то

724
00:33:05,279 --> 00:33:09,120
запрос теперь не с айпишника будет

725
00:33:06,899 --> 00:33:12,918
проходить А с доменного имени поэтому

726
00:33:09,120 --> 00:33:17,719
возвращаемся в наш файлик env

727
00:33:12,919 --> 00:33:17,720
и меняем там A load hosts

728
00:33:19,260 --> 00:33:22,820
указываем также www

729
00:33:23,240 --> 00:33:30,240
и просто apid Fall helper.ru Когда у нас

730
00:33:27,539 --> 00:33:32,658
уже работает служба гуникорн то после

731
00:33:30,240 --> 00:33:35,340
любых изменений в йен в файлики

732
00:33:32,659 --> 00:33:37,799
необходимо перезапускать службу чтобы

733
00:33:35,340 --> 00:33:40,760
заново у нас подтянулись настройки

734
00:33:37,799 --> 00:33:44,340
поэтому выполняем команду суда сервис

735
00:33:40,760 --> 00:33:46,679
гуникорн Dev Restart но и теперь Давайте

736
00:33:44,340 --> 00:33:49,559
попробуем еще раз подключиться к нашему

737
00:33:46,679 --> 00:33:53,100
сайту теперь я использую доменное имя

738
00:33:49,559 --> 00:33:55,799
уже и Как видите если мы пробуем сейчас

739
00:33:53,100 --> 00:33:59,279
зайти то ничего не работает потому что

740
00:33:55,799 --> 00:34:01,679
как я и сказал ранее мы Engine X config

741
00:33:59,279 --> 00:34:04,440
файл создали и теперь нам все что

742
00:34:01,679 --> 00:34:06,899
осталось сделать это просто связать его

743
00:34:04,440 --> 00:34:09,179
то есть добавить этот конфиг файл в

744
00:34:06,899 --> 00:34:10,379
активный что мы Для этого делаем мы

745
00:34:09,179 --> 00:34:13,200
используем вот такой вот команду

746
00:34:10,379 --> 00:34:16,859
называется она выполняем отсюда

747
00:34:13,199 --> 00:34:19,739
дальше ln ключ S и указываем полный путь

748
00:34:16,859 --> 00:34:22,259
до нашего файла etc enginex сайт

749
00:34:19,739 --> 00:34:24,118
evalible и здесь указываю наш config

750
00:34:22,260 --> 00:34:26,099
файл И после этого сразу же указываем

751
00:34:24,119 --> 00:34:30,060
также полный путь до места куда

752
00:34:26,099 --> 00:34:33,119
необходимо залинковать а именно etc

753
00:34:30,060 --> 00:34:36,739
Engine X сайт уже enabled и пускай

754
00:34:33,119 --> 00:34:36,740
название будет такое же apid F

755
00:34:37,379 --> 00:34:43,879
и теперь снова перезапускаем сервис

756
00:34:40,739 --> 00:34:43,879
Engine X Restart

757
00:34:43,918 --> 00:34:49,199
пробуем снова подключиться и видим что

758
00:34:46,859 --> 00:34:51,359
да Вот теперь все отвечает снова админка

759
00:34:49,199 --> 00:34:54,779
нам отвечает Значит мы снова можем

760
00:34:51,359 --> 00:34:57,740
перейти в нашу админку Давайте посмотрим

761
00:34:54,780 --> 00:35:02,280
вот она админка пробуем подключиться

762
00:34:57,740 --> 00:35:05,098
вводим логин пароль и Да и мы попали в

763
00:35:02,280 --> 00:35:06,660
админку здесь Наши все модели наши

764
00:35:05,099 --> 00:35:09,000
приложения все хорошо все хорошо

765
00:35:06,660 --> 00:35:11,759
работает единственное что осталось это

766
00:35:09,000 --> 00:35:14,940
вот это не защищённое соединение То есть

767
00:35:11,760 --> 00:35:18,480
у нас сейчас подключение по http Давайте

768
00:35:14,940 --> 00:35:20,280
подключим https к нашему сайту для этого

769
00:35:18,480 --> 00:35:22,980
мы будем использовать сербота который

770
00:35:20,280 --> 00:35:25,440
нам на генерирует бесплатные ssl

771
00:35:22,980 --> 00:35:29,579
сертификаты для этого нам потребуется

772
00:35:25,440 --> 00:35:32,040
установить через appt 2 зависимости 2

773
00:35:29,579 --> 00:35:34,350
пакета а именно сербот и поэтому трейсер

774
00:35:32,040 --> 00:35:37,570
бот ngx давайте сделаем это

775
00:35:34,350 --> 00:35:37,569
[музыка]

776
00:35:39,380 --> 00:35:47,660
мы установили и теперь просто выполняем

777
00:35:41,820 --> 00:35:47,660
команду отсюда и указываем сербот

778
00:35:48,000 --> 00:35:54,359
для начала вводим наш mail чтобы с нами

779
00:35:51,900 --> 00:35:57,560
можно было связаться

780
00:35:54,359 --> 00:36:00,060
чтобы если вдруг что необходимо было за

781
00:35:57,560 --> 00:36:01,920
это используется для того чтобы нам

782
00:36:00,060 --> 00:36:05,160
приходили сообщения о необходимости

783
00:36:01,920 --> 00:36:08,099
обновить наш сертификат

784
00:36:05,160 --> 00:36:10,200
соглашаемся с правилами

785
00:36:08,099 --> 00:36:13,200
и смотрите по умолчанию у нас сразу

786
00:36:10,200 --> 00:36:15,660
определяется по настройке Engine X какие

787
00:36:13,200 --> 00:36:19,200
домены привязаны а именно вот эти наши

788
00:36:15,660 --> 00:36:21,299
два можем создать сразу для двух наших

789
00:36:19,200 --> 00:36:26,480
доменов сертификаты для этого просто

790
00:36:21,300 --> 00:36:26,480
через пробел можем перечислять 1 2

791
00:36:29,340 --> 00:36:34,140
[музыка]

792
00:36:32,040 --> 00:36:36,180
Как видим все прошло успешно поэтому

793
00:36:34,140 --> 00:36:38,779
Давайте обновим страничку и видим что

794
00:36:36,180 --> 00:36:42,419
вот он замочек появился и у нас теперь

795
00:36:38,780 --> 00:36:44,700
https соединение и теперь вообще все

796
00:36:42,420 --> 00:36:47,400
отлично его так за видео мы

797
00:36:44,700 --> 00:36:50,480
зарегистрировали доменное имя связали

798
00:36:47,400 --> 00:36:53,640
его созданным нами ранее сервером

799
00:36:50,480 --> 00:36:56,940
привязали айпишники затем мы настроили

800
00:36:53,640 --> 00:37:00,240
наш сервер и в конечном итоге у нас

801
00:36:56,940 --> 00:37:02,760
теперь на облачном сервере крутится наш

802
00:37:00,240 --> 00:37:05,279
проект который называется apid Fall

803
00:37:02,760 --> 00:37:08,280
helper.ru пока что это Back and нашего

804
00:37:05,280 --> 00:37:10,560
проекта Но точно также появится еще и

805
00:37:08,280 --> 00:37:13,560
фронт-энд в скором времени и все это

806
00:37:10,560 --> 00:37:15,720
будет у нас доступно в любое время А на

807
00:37:13,560 --> 00:37:18,299
ближайшем стриме мы еще добавим сюда

808
00:37:15,720 --> 00:37:20,399
простенький автодиплой это будет

809
00:37:18,300 --> 00:37:23,220
означать что после каждого стрима когда

810
00:37:20,400 --> 00:37:25,320
я буду загружать обновления которые были

811
00:37:23,220 --> 00:37:28,259
сделаны в течение стрима эти обновления

812
00:37:25,320 --> 00:37:31,260
сразу же будут попадать на этот сервер и

813
00:37:28,260 --> 00:37:33,720
вы всегда сможете в любое зайти на этот

814
00:37:31,260 --> 00:37:36,359
проект и посмотреть что с ним и на каком

815
00:37:33,720 --> 00:37:38,459
этапе он сейчас находится это видео

816
00:37:36,359 --> 00:37:40,440
получилось намного продуктивнее чем

817
00:37:38,460 --> 00:37:42,540
прошлый Стрим который длился два с

818
00:37:40,440 --> 00:37:44,940
половиной часа но тем не менее всем кто

819
00:37:42,540 --> 00:37:47,579
был на том стриме отдельный Привет и

820
00:37:44,940 --> 00:37:51,420
респект вы молодцы Ну а всем кто смотрит

821
00:37:47,579 --> 00:37:53,820
после знаете что нам было тяжело но мы

822
00:37:51,420 --> 00:37:56,400
справились Так ладно все всем успехов

823
00:37:53,820 --> 00:37:59,180
всем пока И до скорого встретимся на

824
00:37:56,400 --> 00:37:59,180
ближайших стри

